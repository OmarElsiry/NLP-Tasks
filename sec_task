import csv
from nltk import word_tokenize
from nltk.stem import PorterStemmer as p_stem
from nltk.stem import SnowballStemmer as s_stem

# Function to tokenize and stem text
# Parameters:
# - text: The text to be tokenized and stemmed
# - stemmer_type: The type of stemmer to use ('porter' or 'snowball')
def token_and_stem(text, stemmer_type='porter'):
    # Tokenize the text into individual words
    tokens = word_tokenize(text)
    # Initialize an empty list to store the stemmed tokens
    stemmed_tokens = []
    # Check the specified stemmer type and apply the corresponding stemming
    if stemmer_type == 'porter':
        # Use the Porter stemmer to stem each token
        stemmed_tokens = [p_stem().stem(token) for token in tokens]
    elif stemmer_type == 'snowball':
        # Use the Snowball stemmer to stem each token
        stemmed_tokens = [s_stem(language="english").stem(token) for token in tokens]
    else:
        # Raise an error if an invalid stemmer type is specified
        raise ValueError("Invalid stemmer type. Choose 'porter' or 'snowball'.")
    # Return the list of stemmed tokens
    return stemmed_tokens

# Function to process a CSV file
# Parameters:
# - file: The path to the CSV file
# - stemmer_type: The type of stemmer to use ('porter' or 'snowball')
def process_csv(file, stemmer_type='porter'):
    # Initialize an empty list to store the stemmed texts
    stemmed_texts = []
    # Open the CSV file for reading
    with open(file, 'r') as file:
        # Create a DictReader object to read the CSV file
        reader = csv.DictReader(file)
        # Iterate over each row in the CSV file
        for row in reader:
            # Extract the text from the 'text' column
            text = row['text']
            # Tokenize and stem the text
            stemmed_text = token_and_stem(text, stemmer_type)
            # Append the stemmed text to the list of stemmed texts
            stemmed_texts.append(stemmed_text)
    # Return the list of stemmed texts
    return stemmed_texts

# Example usage
# Specify the path to the CSV file
file = 'text.csv'
# Process the CSV file and store the stemmed texts
stemmed_texts = process_csv(file)
# Print each stemmed text
for text in stemmed_texts:
    print(text)
